DashboardPanel = function(config){

	Ext.apply(this, config);
	var rightpanel = 0.17;
	
	var tools = [{
		id:'gear',
		handler: function(){
		    	Ext.Msg.alert('Message', 'The Settings tool was clicked.');
			}
	    },{
		id:'close',
		handler: function(e, target, panel){
		    panel.ownerCt.remove(panel, true);
		}
    	}];

	this.accountsSummary = new AccountsPanel();
	this.cashrecordsSummary = new CahrecordsPanel();
	this.categoriesSummary = new CategoriesPanel({id: 'categoriesSummary',filename : 'pie.png'});
	this.bloneyAccount = new Ext.FormPanel({
			labelWidth: 95, // label settings here cascade unless overridden
			//url: '/customers/create',
			frame:true,
			listeners: {activate: this.handleActivate},
			defaultType: 'textfield',
			id:'bloneyaccount',
			title:'Bloney Account',
			items: [{
						xtype:"hidden",
						id:'bloneyaccount_id'
					},{
						xtype:"hidden",
						id:'authenticity_token'
					},{
						xtype:"combo",
						fieldLabel:"Account Type",
						width : 125,
						store: new Ext.data.SimpleStore({
								fields: ['account_type', 'account_typedesc'],
								data : [['FREE','Free'],
										['BASIC','Basic'],
										['PLUS','Plus'],
										['PREMIUM','Premium']]
						}),
						displayField:'account_typedesc',
						valueField: 'account_type',
						hiddenName: 'account_typeId',
						typeAhead: true,
						id:'account_type',
						mode: 'local',
						triggerAction: 'all',
						emptyText:'Bloney Account',
						selectOnFocus:true,
						allowBlank:true
					},new Ext.TabPanel({
				        id: 'account_tabs',
				        width:225,
				        activeTab: 0,
				        frame:true,
						autoScroll:true,
				        defaults:{autoHeight: true},
				        items:[
				            {
								xtype : 'panel',
								autoScroll:true,
				                title: 'Companies',
				                autoLoad:{url: '/dashboard/company_account', 
				               			 scope: this}
				            },{
								xtype : 'panel',
								autoScroll:true,
				                title: 'Experts',
				                autoLoad:{url: '/dashboard/expert_account', 
				               			 scope: this}
				            }
				        ]
				    })
			],
			buttons: [{
				text: 'SignUp',
				handler : function() {}
			},{
				text : 'Upgrate',
				handler : function(){}
			}]			
		});;
	
	DashboardPanel.superclass.constructor.call(this, {
		id:'dashboard',
        title: 'Dashboard',
        autoScroll:true,
		layout:'border',
		listeners: {activate: this.handleActivate},
		items:[ {
				region:'east',
				id:'dashboard_east',
				split:true,
				width: rightpanel*config.viewwidth,
				minSize: rightpanel*config.viewwidth,
				maxSize: rightpanel*config.viewwidth,
				collapsible: true,
				layout:'accordion',
				layoutConfig:{
					animate:true
				},
				items: [
					 this.bloneyAccount,
					 new Ext.grid.PropertyGrid({
						title: 'Users Settings',
						closable: true,
						iconCls:'nav',
						source: {
						    "(name)": "Properties Grid",
						    "grouping": false,
						    "autoFitColumns": true,
						    "productionQuality": false,
						    "created": new Date(Date.parse('10/15/2006')),
						    "tested": false,
						    "version": 0.01,
						    "borderWidth": 1
						    }
					    	})
					]
			},
			{
			  xtype:'portal',
			  region:'center',
			  width : (1.0 - rightpanel)*config.viewwidth,
			  margins:'1 -3 1 1',
			  id:'dashboard_main',
			  items:[{
					columnWidth: 0.4,
					style:'padding:5px 5 5px 5px',
					items:[{
							title: 'Comapany Current Balance',
							tools: tools,
							autoLoad: {
				            	url: '/dashboard/company_balance', 
				               	scope: this
				            	},          
				            autoScroll: true            
        	
						},{
							title: 'Categories Usage',
							layout:'fit',
							tools: tools,
							items : this.categoriesSummary
						}]
				},{
					columnWidth: 0.6,
					style:'padding:5px 5 5px 0px',
					items:[{
							title: 'Accounts summary',
							layout:'fit',
							tools: tools,
							items : this.accountsSummary
						},{
							title: 'Cashflow for today',
							layout:'fit',
							tools: tools,
							items : this.cashrecordsSummary
						}
						]
				}
			  ]
			}
        ]
    });

};

Ext.extend(DashboardPanel, Ext.Panel,{
	
	handleActivate : function(tab){
		
			
			this.accountsSummary.loadRecords();
			this.cashrecordsSummary.loadRecords();
			this.categoriesSummary.loadData("pie");
			tab.doLayout();
	}
});



CashflowPanel = function(config){

	Ext.apply(this, config);
	this.winconfig = config.winconfig;
	var leftpanel = 0.07;
	var rightpanel = 0.2;
	////////////////////////////////////////////////////////////////////////////
	// Central part of the Tab Cashflow grid and bottom tab
	this.combo = new Ext.form.ComboBox({
		store: new Ext.data.SimpleStore({
			fields: ['abbr', 'state'],
			data : [['ACTV','Active'],
					['DELT','Deleted'],
					['BALN','Balanced']]
		    }),
		displayField:'state',
		typeAhead: true,
		mode: 'local',
		triggerAction: 'all',
		emptyText:'Cashrecords filter...',
		selectOnFocus:true,
		width:135,
		fieldLabel: 'Apply filter'
	});

	var dateMenu = new Ext.menu.DateMenu({
		handler : function(dp, date){
			Ext.example.msg('Date Selected', 'You chose {0}.', date.format('M j, Y'));

			this.store.baseParams = {
					start_day:this.start_date.format('Y-m-d')
			};
			this.store.load();
		}
	});

	// Menus can be prebuilt and passed by reference
	var colorMenu = new Ext.menu.ColorMenu({
		handler : function(cm, color){
			Ext.example.msg('Color Selected', 'You chose {0}.', color);
		}
	});

	var menu = new Ext.menu.Menu({
        id: 'mainMenu',
        items: ['<b class="x-toolbar x-small-editor">Cashflow Menu</b>','-',
            {
                text: 'Balance Sheet',
                checked: true,
                group: 'cashrecords'
            },{
                text: 'Income Statement',
                checked: true,
                group: 'cashrecords'
            },{
                text: 'Cash flow statement',
                checked:false,
                group: 'cashrecords'
            },{
                text: 'Shareholders equity',
                checked:false,
                group: 'cashrecords'
            }
          ]
    	});

	this.grid = new BloneyCashrecords.Grid(this,{
		width : (1.0 - (leftpanel+rightpanel))*config.viewwidth,
		region : 'center',
		tbar: [{
				    text: 'Add Debit',
				    //handler: onButtonClick,
				    tooltip: {text:'This is a QuickTip with autoHide set to false and a title', title:'Tip Title', autoHide:true},
				    cls: 'x-btn-text-icon blist',
				    menu:{
						id:'reading-menu',
						cls:'reading-menu',
						width:100,
						items: [
							{
								text: 'Debit',
								handler: this.addCashrecord("debit")
							},{
								text: 'Expected Debit',
								handler: this.addCashrecord("antidebit")
							}]
						}
				},{
				    text: 'Add Credit',
				    //handler: onButtonClick,
				    tooltip: {text:'This is a QuickTip with autoHide set to false and a title', title:'Tip Title', autoHide:true},
				    cls: 'x-btn-text-icon blist',
				    menu:{
						id:'reading-menu',
						cls:'reading-menu',
						width:100,
						items: [
							{
								text: 'Credit',
								handler: this.addCashrecord("credit")
							},{
								text: 'Expected Credit',
								handler: this.addCashrecord("anticredit")
							}]
						}
			},'-',{
				text:'Previous Month',
				handler: function() {
					Ext.getCmp('cashrecordsgrid').start_date.setMonth(Ext.getCmp('cashrecordsgrid').start_date.getMonth() - 1) ;
					Ext.getCmp('cashrecordsgrid').store.baseParams = {
							start_day:Ext.getCmp('cashrecordsgrid').start_date.format('Y-m-d')
						};
					Ext.getCmp('cashrecordsgrid').store.load();
				}
			},{
				text:'Next Month',
				handler: function() {
					Ext.getCmp('cashrecordsgrid').start_date.setMonth(Ext.getCmp('cashrecordsgrid').start_date.getMonth() + 1) ;
					Ext.getCmp('cashrecordsgrid').store.baseParams = {
							start_day:Ext.getCmp('cashrecordsgrid').start_date.format('Y-m-d')
						};
					Ext.getCmp('cashrecordsgrid').store.load();
				}
			},'->',{
				text:'Start of Month Amount'
			},new Ext.form.TextField({
				id: 'smtotalmnthamount',
				width:150,
				disabled :true,
				disabledClass : 'align-right',
				emptyText:'0.00'})],
		bbar: [{
		            cls: 'x-btn-text-icon bmenu', // icon and text class
		            text:'Cashrecords Menu',
		            menu: menu  // assign menu by instance
		        },
			{text:'Filter Cashrecords'},
			this.combo, '->',
			{text:'End of Month Amount'},
			new Ext.form.TextField({
				id: 'emtotalmnthamount',
				width:150,
				disabled :true,
				disabledClass : 'align-right',
				emptyText:'0.00'})			
		]
	});

	this.combo.on('select', function c(record, index) {
          Ext.example.msg('Cashrecord filter', 'Selected filter "{0}" for cashrecords.',index.data.state);
		  Ext.getCmp('cashrecordsgrid').loadRecords('', index.data.abbr);
 	});

	////////////////////////////////////////////////////////////////////////////
	// East part of the Tab histories and user defined histories
	this.histories = new CashrecordsHistory();
	this.userhistories = new UserHistory();

	this.histories_tabs = new Ext.TabPanel({
		    region:'east',
			split:true,
			//title: 'Histories',
			width: rightpanel*config.viewwidth,
			minSize: rightpanel*config.viewwidth,
			maxSize: rightpanel*config.viewwidth,
			collapsible: true,
			activeTab: 0,
			frame:true,
			tabPosition : 'bottom',
			autoScroll:true,
			defaults:{autoHeight: true},
			tbar            : [{
				text    : 'Expand All',
				tooltip : 'Expand all categories',
				scope   : this,
				handler : function() { this.histories.expandAll(); }
			},{
				text    : 'Collapse All',
				tooltip : 'Collapse all categories',
				scope   : this,
				handler : function() { this.histories.collapseAll(); }
			}],
			items:[
			    this.histories,
			    this.userhistories
			]
    	});

	////////////////////////////////////////////////////////////////////////////
	// West part of the Tab reports, alerts and categories
	

	CashflowPanel.superclass.constructor.call(this, {
		id:'cashrecords',
		title: 'Cashflow',
		autoScroll:true,
		layout:'border',
		listeners: {activate: this.handleActivate},
        	items:[this.grid ,
        	       this.histories_tabs,
        	       new Ext.Panel({
						region:'west',
						id:'categories',
						frame:false,
						collapsible:true,
						width : leftpanel*config.viewwidth,
						minwidth: leftpanel*config.viewwidth,
						layout:'form',
						autoScroll:true,
						title:'Shortcuts',
						items: [new CashflowShortcutPanel()]
					})
		        ]
    });

};

Ext.extend(CashflowPanel, Ext.Panel,{

	
	handleActivate : function(tab){
			
			this.grid.loadRecords();
			tab.doLayout();
	},
	
	addCashrecord : function(record_type){
		/*
var cashrecordsWin = Ext.getCmp('wndcashrecords') == null ? new BloneyCashrecords.MainWnd(this.winconfig) : Ext.getCmp('wndcashrecords');
		var position  = Ext.getCmp('tabs_toolbar').getPosition();
		cashrecordsWin.setPosition(position[0]+280,position[1]+40);
	    cashrecordsWin.show.defer(500, cashrecordsWin);
*/
	}
});


BankingPanel = function(config){
	
	Ext.apply(this, config);
	var leftpanel = 0.5;
	this.grid = new BankingGrid(this,{
										id:'bankinggrid',
										width : (1.0 - leftpanel)*config.viewwidth
								});

	BankingPanel.superclass.constructor.call(this, {
		id:'banking',
        title: 'Banking',
        autoScroll:true,
		layout:'border',
		listeners: {activate: this.handleActivate},
        items:[
        	this.grid ,
		{
			title: 'Bank',
			xtype:'iframepanel',
			region:'west',
			layout:'fit',
			defaultSrc:'http://www.leumi.co.il',
			loadMask:true,
			border:false,
			split:true,
			width: leftpanel*config.viewwidth,
			minSize: leftpanel*config.viewwidth,
			maxSize: leftpanel*config.viewwidth,
			collapsible: true,
			autoScroll:true,
			loadMask:{msg:'Loading Bank Site...'}
		}
        ]
    });
};

Ext.extend(BankingPanel, Ext.Panel,{

	handleActivate : function(tab){
		this.grid.loadRecords();
		tab.doLayout();
	}
});


CollaboratePanel = function(config){

	Ext.apply(this, config);
	var rightPanel = 0.15;
	
	this.advisors = new AdvisorsPanel();
	this.comapanies = new CompaniesPanel();
	
	CollaboratePanel.superclass.constructor.call(this, {
		id:'collaborate',
        title: 'Collaborate',
        autoScroll:true,
		layout:'border',
		listeners: {activate: this.handleActivate},
        	items:[
        		{
        			xtype:'tabpanel',
        			region : 'center',
        			title:'Collaborative Instruments',
        			split:true,
 					id: 'collaboratetabs',
					activeTab:0,
					margins:'5 0 0 5',
					resizeTabs:true,
					tabWidth:150,
					minTabWidth: 120,
					enableTabScroll: true,
					tabPosition : 'bottom',
					width : (1.0 - rightPanel)*config.viewwidth,
        			items : [{
							title: 'CPA Perfect',
							xtype:'iframepanel',
							id: 'advisorhomepage',
							layout:'fit',
							defaultSrc:'http://blog.blogtery.com',
							loadMask:true,
							border:false,
							split:true,
							collapsible: true,
							autoScroll:true,
							loadMask:{msg:'Loading Site...'}
						},
        				{
							title: 'Experts Forum',
							xtype:'iframepanel',
							id: 'advisorforum',
							layout:'fit',
							defaultSrc:'http://forum.blogtery.com/index.php?action=login',
							loadMask:true,
							border:false,
							split:true,
							collapsible: true,
							autoScroll:true,
							loadMask:{msg:'Loading Forum...'}
						},
        				{
        				  title: 'Collaborate Dashboard',
						  xtype:'portal',
						  id:'collaborate_portal',
						  items:[{
									columnWidth: 0.5,
									style:'padding:5px 5 5px 5px',
									items:[{
											title: 'Comapany Current Balance',
											autoLoad: {
								            	url: '/dashboard/company_balance', 
								               	scope: this
								            	},          
								            autoScroll: true            
				        	
										}]
								},{
									columnWidth: 0.5,
									style:'padding:5px 5 5px 0px'
							}
						  ]
						}
        			]
        		},{
					region:'east',
					layout:'accordion',
					split:true,
					width: rightPanel*config.viewwidth,
					minSize: 200,
					maxSize: 200,
					defaults: {
						// applied to each contained panel
						//bodyStyle: 'padding:0px'
					},
					layoutConfig: {
						// layout-specific configs go here
						titleCollapse: false,
						animate: true
					},
					items: [
						new Ext.Panel({
							id:'advisors',
							frame:false,
							collapsible:true,
							layout:'form',
							autoScroll:true,
							title:'Experts',
							items: [this.advisors]
						}),
						new Ext.Panel({
							id:'companies',
							frame:false,
							collapsible:true,
							layout:'form',
							autoScroll:true,
							title:'Companies',
							items: [this.comapanies]
						})
					]
			}
        ]
    });
};

Ext.extend(CollaboratePanel, Ext.Panel,{

	handleActivate : function(tab){
	
	var store = new Ext.data.SimpleStore({  
     fields: [  
         {  
             name: 'pointDate',  
             type: 'date'  
         },  
         {  
             name: 'pointClose',  
             type: 'float'  
         },  
         {  
             name: 'pointNetChg',  
             type: 'float'  
         },  
         {  
             name: 'pointPctChg',  
             type: 'float'  
         },  
         {  
             name: 'pointNews',  
             type: 'string'  
         }  
     ],  
     data: [  
         ['10/13/2008',9387.61,936.42,11.10,'U.S. stocks join global rally on government plans.'],  
         ['3/16/2000',10630.60,499.19,4.93,'Mar 16, 2000 highlights here.'],  
         ['7/24/2002',8191.29,488.95,6.35,'Jul 24, 2002 highlights here.'],  
         ['9/30/2008',10850.66,485.21,4.68,'Sep 30, 2008 highlights here.'],  
         ['7/29/2002',8711.88,447.49,5.41,'Jul 29, 2002 highlights here.'],  
         ['3/18/2008',12392.66,420.41,3.51,'Mar 18, 2008 highlights here.'],  
         ['3/11/2008',12156.81,416.66,3.55,'Mar 11, 2008 highlights here.'],  
         ['9/18/2008',11019.69,410.03,3.86,'Sep 18, 2008 highlights here.'],  
         ['4/5/2001',9918.05,402.63,4.23,'Apr 5, 2001 highlights here.'],  
         ['4/18/2001',10615.83,399.10,3.91,'Apr 18, 2001 highlights here.'],  
         ['4/1/2008',12654.36,391.47,3.19,'April Fools Day, 2008'],  
         ['9/8/1998',8020.78,380.53,4.98,'Sep 8, 1998 highlights here.'],  
         ['10/15/2002',8255.68,378.28,4.80,'Oct 15, 2002 highlights here.'],  
         ['9/19/2008',11388.44,368.75,3.35,'Sep 19, 2008 highlights here.'],  
         ['9/24/2001',8603.86,368.05,4.47,'Sep 24, 2001 highlights here.'],  
         ['10/1/2002',7938.79,346.86,4.57,''],  
         ['5/16/2001',11215.92,342.95,3.15,''],  
         ['2/5/2000',10898.72,338.62,3.21,''],  
         ['10/28/1997',7498.32,337.17,4.71,''],  
         ['9/18/2007',13739.39,335.97,2.51,''],  
         ['8/5/2008',11615.77,331.62,2.94,'']  
     ]  
 	});
	
	var timeline = new Ext.ux.GVisualizationPanel({
		renderTo: Ext.get('collaborate').dom,
		id: 'timeline',
		visualizationPkg: {'annotatedtimeline': 'AnnotatedTimeLine'},
		visualizationCfg: {
			allowHtml: true,
			displayAnnotations: true,
			displayExactValues: true,
			wmode: 'transparent'
		},
		height: 400,
		title: 'Greatest DJIA Daily Point Gains',
		store: store,
		columns: [
			{
				dataIndex: 'pointDate',
				label: 'Date'
			},
			{
				dataIndex: 'pointClose',
				label: 'Close'
			},
			{
				dataIndex: 'pointNetChg',
				label: 'Net Chg'
			},
			{
				dataIndex: 'pointPctChg',
				label: 'Pct Chg'
			},
			{
				dataIndex: 'pointNews'
			}
		]
	});
	
	Ext.getCmp('collaborate_portal').add(timeline);
		//Ext.getCmp('advisorhomepage').setSrc('http://localhost:3000');
		
		tab.doLayout();
	}

});




BloneyTabPanel = function(config){
	
	Ext.apply(this, config);

	this.config = config;
	this.current_title = Ext.get('tab_name').dom.getAttribute('title');
	
    BloneyTabPanel.superclass.constructor.call(this, {
		region:'center',
		id: 'tabs_toolbar',
		activeTab: 0,//Ext.get('tab_name').dom.getAttribute('tab_index'),
        layoutOnTabChange : true,
		margins:'0 0 0 0',
		resizeTabs:true,
		tabWidth:150,
		minTabWidth: 120,
		enableTabScroll: true,
		deferredRender:false/*,
		listeners: {
		    beforetabchange: function(p, t, c) {
		        if(this.current_title != t.title) {
		            var um = Ext.get('bloney_tab_scripts').getUpdater();
					um.update({
						url      : t.url,
						callback : function(el, success, response){
						   		if(success)
								{	
									Ext.get('bloney_tab_scripts').update(response.responseText,false);									
								}
								else
								{
									//Ext.example.msg("Notifications", '{0}.',response.notice );	
								}
						},
					    scripts  : false // Save time by avoiding RegExp execution.
					});
		            //return false;
		        }
				
				
		    }
		} */
	 });
	
	if(tab = Ext.get("dashboard") != null) 	{ this.add(new DashboardPanel(config));	}
	
	if(tab = Ext.get("cashflow") != null)	{ this.add(new CashflowPanel(config));	}
	
	if(tab = Ext.get("banking") != null)    { this.add(new BankingPanel(config));  }

	if(tab = Ext.get("collaborate") != null) { this.add(new CollaboratePanel(config));	}
	
	//if(tab = Ext.get("expert") != null)
	//{
		//this.add(new CashflowPanel(config));
	//}
	
	
};

Ext.extend(BloneyTabPanel, Ext.TabPanel, {

    addTabLayout : function(config){
        var tab;
        if(!(tab = this.getItem(id))){
            tab = new Ext.Panel(config);
            this.add(tab);
        }
        //this.setActiveTab(tab);
    },

    updateStyle : function(){

    	this.items.each(function(item){
    			item.el.setStyle("font-size","90%");
    	    });
    }
});

////////////////////////////////////////////////////////////////////////////////////////////////////
//  Main start of the Bloney
////////////////////////////////////////////////////////////////////////////////////////////////////
Bloney = function(){
	version:"0.1"
}

Bloney.prototype = {

	initBloney : function(){
		Ext.QuickTips.init();
		var winconfig = {
			maximizable : true,
			collapsible : true,
			width : 920,
			height : 550,
			border : true,
			plain : true,
			shadow : true,
			layout : 'border',
			xbloney : 'default',
			closable:true,
			resizable : true,
			split : true,
			balance_date: ''
		};
		
		var config = {
			viewheight : Ext.getBody().getViewSize().height,
			viewwidth : Ext.getBody().getViewSize().width,
			activeTab : 0,
			notification_timeout : 15000000,
			winconfig : winconfig
		};
		
		var bloneyTabs =  new BloneyTabPanel(config);
		var bloneyToolbar = new BloneyToolbar(config);
		var bloneyNotification = new BloneyNotifications.MainWnd(config);
		
		var viewport = new Ext.Viewport({
			layout:'border',
			//,id: 'bloney'
			renderTo : Ext.getBody(),
			items: [
				 bloneyTabs  
				,bloneyToolbar
				,bloneyNotification
			]
		});

		Ext.getCmp('bloneytoolbar').render('bloney_header');
		Ext.getCmp('bloneytoolbar').renderToolbar();
		
		Ext.getCmp('tabs_toolbar').el.select(".x-tab-strip-text").setStyle("font-size","90%");
		Ext.getCmp("tabs_toolbar").el.select(".x-tab-strip-text").setStyle("font-weight","bold");
		//Ext.getCmp("tabs_toolbar").el.select(".x-tab-strip-text").setStyle("font-family","Verdana");
		
		//bloneyNotification.loadRecords(1);
		bloneyNotification.startTasks(config);
	}
};

Ext.onReady(function(){

	var bloneyApp = new Bloney();
	bloneyApp.initBloney();

});